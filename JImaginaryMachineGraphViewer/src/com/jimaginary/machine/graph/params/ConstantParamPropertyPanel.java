/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.jimaginary.machine.graph.params;

import com.jimaginary.machine.graph.viewer.ParameterPropertyEditor;
import com.jimaginary.machine.math.MathFunction;

/**
 *
 * @author simonkenny
 */
public class ConstantParamPropertyPanel extends javax.swing.JPanel {
    private final int PARAM_PROB = 0;
    
    private final MathFunction mathFunc;
    
    ParameterPropertyEditor editor;
    
    /**
     * Creates new form ConstantParamPropertyPanel
     */
    public ConstantParamPropertyPanel(String []idxNames, MathFunction mathFunc, ParameterPropertyEditor editor) {
        initComponents();
        this.editor = editor;
        this.mathFunc = mathFunc;
        jLabelParam.setText(mathFunc.getParamName(0));
        jTextFieldParam.setText(""+mathFunc.getParameter(0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelParam = new javax.swing.JLabel();
        jTextFieldParam = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ConstantParamPropertyPanel.class, "ConstantParamPropertyPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelParam, org.openide.util.NbBundle.getMessage(ConstantParamPropertyPanel.class, "ConstantParamPropertyPanel.jLabelParam.text")); // NOI18N

        jTextFieldParam.setText(org.openide.util.NbBundle.getMessage(ConstantParamPropertyPanel.class, "ConstantParamPropertyPanel.jTextFieldParam.text")); // NOI18N
        jTextFieldParam.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldParamFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelParam, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldParam, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelParam)
                    .addComponent(jTextFieldParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldParamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldParamFocusLost
        System.out.println("Textfield validation called (focus lost)");
        float val = Float.parseFloat(jTextFieldParam.getText());
        jTextFieldParam.setText(""+val);
        mathFunc.setParameter(0, val);
        editor.setAsText(mathFunc.toString());
    }//GEN-LAST:event_jTextFieldParamFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelParam;
    private javax.swing.JTextField jTextFieldParam;
    // End of variables declaration//GEN-END:variables
}
